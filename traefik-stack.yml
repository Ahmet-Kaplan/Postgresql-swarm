version: "3.9"
networks:
  traefik-public:
    external: true
  dbnetwork:
    external: true

services:
  traefik:
    image: traefik:latest
    command:
      - "--log.level=INFO"
      - "--api=true"
      - "--api.dashboard=true"
      - "--ping=true"
      - "--providers.docker=true"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.watch"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--entryPoints.web.http.redirections.entryPoint.to=websecure"
      - "--entryPoints.web.http.redirections.entryPoint.scheme=https"
      - "--entryPoints.web.forwardedHeaders.trustedIPs=${TRUSTED_IPS}"
      - "--entryPoints.web.proxyProtocol.trustedIPs=${TRUSTED_IPS}"
      - "--entryPoints.web.forwardedHeaders.insecure=false"
      - "--entryPoints.web.proxyProtocol.insecure=false"
      - "--entryPoints.websecure.forwardedHeaders.trustedIPs=${TRUSTED_IPS}"
      - "--entryPoints.websecure.proxyProtocol.trustedIPs=${TRUSTED_IPS}"
      - "--entryPoints.websecure.forwardedHeaders.insecure=false"
      - "--entryPoints.websecure.proxyProtocol.insecure=false"
      - "--certificatesResolvers.le.acme.httpchallenge=true"
      - "--certificatesResolvers.le.acme.email=${ADMIN_EMAIL:-info@example.org}"
      - "--certificatesResolvers.le.acme.storage=/letsencrypt/acme.json"
      - "--certificatesResolvers.le.acme.httpChallenge.entryPoint=web"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
      - "--providers.redis.endpoints=redis:6379"
      - "--providers.file.directory=/etc/traefik/configs/"
      - "--accesslog=true"
    healthcheck:
      test: "wget --spider http://localhost:8080/ping || exit 1"
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 30s
    ports:
      - target: 8080
        published: 8080
        protocol: tcp
        mode: ingress
      - target: 443
        published: 443
        protocol: tcp
        mode: ingress
      - target: 80
        published: 80
        protocol: tcp
        mode: ingress
    networks:
      - dbnetwork
      - traefik-public
    configs:
      - source: traefik_conf
        target: /etc/traefik/configs/static.yml
      - source: traefik_tls
        target: /etc/traefik/configs/tls.yml
    volumes:
      # To persist certificates
      - traefik-certificates:/letsencrypt
      - traefik-configs:/etc/traefik/configs
      - root-certificates:/etc/ssl/traefik:ro
      # So that Traefik can listen to the Docker events
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
      update_config:
        parallelism: 5
        delay: 10s
      restart_policy:
        condition: on-failure
  redis:
    image: redis:latest
    ports:
      - 6379:6379
    networks:
      - dbnetwork
    deploy:
      replicas: 1
      labels:
          - "traefik.enable=false"
          - "traefik.docker.network=dbnetwork"

volumes:
  traefik-configs: {}
  traefik-certificates:
  root-certificates: {}

configs:
  traefik_conf:
    name: traefik_conf
    file: ./traefik/static_conf.yml
  traefik_tls:
    name: traefik_tls
    file: ./traefik/tls.yml
